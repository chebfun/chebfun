function pass = test_chebfun3f(pref)
% Test the alternative Chebfun3f constructor for Chebfun3.

if ( nargin < 1 ) 
    pref = chebfunpref; 
end 

% Test that approximations are accurate for the functions in test_battery
tol = 1e8 * pref.cheb3Prefs.chebfun3eps;
dom = [0 1 0 1 0 1];

Battery = {@(x,y,z) cos(pi*x.*y.*z),...                                        
    @(x,y,z) cos(2*pi*x.*y.*z),...                                             
    @(x,y,z) cos(3*pi*x.*y.*z),...                                             
    @(x,y,z) cos(4*pi*x.*y.*z),...                                             
    @(x,y,z) cos(5*pi*x.*y.*z),...                                             
    @(x,y,z) cos(6*pi*x.*y.*z),...                                             
    @(x,y,z) cos(7*pi*x.*y.*z),...                                             
    @(x,y,z) sin(pi*x.*y.*z),...                                               
    @(x,y,z) sin(8*pi*x.*(1-x).*y.*(1-y).*z.*(1-z)),...                        
    @(x,y,z) sin(8*pi*x.*(1-x).*y.*(1-y).*z.*(1-z).*(x-y-z).^2),...            
    @(x,y,z) cos(0*pi*(x-y-z).^2),...                                          
    @(x,y,z) cos(pi*(x-y-z).^2),...                                            
    @(x,y,z) cos(2*pi*(x-y-z).^2),...                                          
    @(x,y,z) exp(sin(4*pi./(1+x)).*sin(4*pi./(1+y)).*sin(4*pi./(1+z))),...     
    @(x,y,z) log(1+x.*y.*z),...                                                
    @(x,y,z) cos(pi*x.*sin(pi*y)) + cos(pi*y.*z.*sin(pi*x.*z)),...             
    @(x,y,z) cos(2*pi*x.*sin(pi*y).*cos(pi*z)) + cos(2*pi*y.*sin(pi*x)),...    
    @(x,y,z) (1-x.*y.*z)./(1+x.^2+y.^2),...                                    
    @(x,y,z) cos(pi*x.*y.^2.*z.^3).*cos(pi*z.*y.^2.*x.^3),...                  
    @(x,y,z) cos(2*pi*x.*y.^2.*z.^3).*cos(2*pi*y.*x.^2.*z.^3),...              
    @(x,y,z) cos(3*pi*x.*y.^2.*(1+z)).*cos(3*pi*y.*x.^2.*(1+z)),...               
    @(x,y,z) (x-y)./(3-x.^2+z.^2),...                                                      
    @(x,y,z) exp(-y.*x.^2.*z) + exp(-x.*y.^2.*z),...                           
    @(x,y,z) exp((1-x.^2.*z)./(1+y.^2.*z)) + exp((1-y.^2.*z)./(1+x.^2.*z)),... 
    @(x,y,z) 10.^(-x.*y.*z),...                                                
    @(x,y,z) 10.^(-10*x.*y.*z),...                                             
    @(x,y,z) sin(x+y+z),...                                                   
    @(x,y,z) exp(x+y+z).*cos(x+y+z),...                                       
    @(x,y,z) cos(pi/4+x+y+z),...                                               
    @(x,y,z) cos(pi/3+5*x+5*y+5*z),...                                        
    @(x,y,z) (x+y+z).^12,...                                                   
    @(x,y,z) exp(x.^2.*y.^2.*z.^2).*cos(x+y+z),...                             
    @(x,y,z) sin(x.*y.*z)+x+y+z,...                                            
    @(x,y,z) cos(100*x)-cos(100*y)-cos(100*z),...                              
    @(x,y,z) x-y+z,...                                                         
    @(x,y,z) -sin(x).*(sin(x.^2/pi).^2 - sin(y).*sin(y.^2/pi).^2) - sin(z).*sin(z.^2/pi).^2,...                  
    @(x,y,z) -x.*sin(sqrt(abs(0.2+x))) - y.*sin(sqrt(abs(0.3+y))) - z.*sin(sqrt(abs(0.1+z))),...                
    @(x,y,z) (x.^2+y.^2+z.^2)/4000 - cos(x).*cos(y/sqrt(2)) .* cos(z/sqrt(3))+1,...                             
    @(x,y,z) exp(1./(1+(((x+1)/2).*((y+1)/2).*(z+1)/2).^2)),...                
    @(x,y,z) 2*exp(exp((x+1)/2)),...  
    };

% Exact values for definite integrals computed with MATLAB's symbolic
% toolbox.
exact = [
    0.8461106227350253, ...
    0.6052157118483288, ...
    0.4697661749231274, ...
    0.3886397051915788, ...
    0.3330920107414529, ...
    0.2928314960173565, ...
    0.2619772790103158, ...
    0.3226674912855009, ...
    0.1153949594968427, ...
    0.0463743346003271, ...
    1.0, ...
    0.3854484437166375, ...
    0.2595975105701650, ...
    1.0700418045865364, ...
    0.1103040719136995, ...
    1.1941278093664705, ...
    0.4916086077355209, ...
    0.5741043338997425, ...
    0.9381453489074456, ...
    0.8830048694732021, ...
    0.3411136775418946, ...
    0.0101828389788635, ...
    1.8529116285910792, ...
    4.2715143503929390, ...
    0.7859343211742496, ...
    0.3352208605577725, ...
    0.8793549306454008, ...
    -0.801590008944990, ...
    -0.577703137905825, ...
    -0.008766419956637, ...
    5220.0021978021978, ...
    0.0366931467095498, ...
    1.6224340287967378, ...
    0.0050636564110975, ...
    0.5, ...
    -0.022434416365347, ...
    -1.181086511303566, ...
    0.2694080277004217, ...
    2.3340368233541618, ...
    17.816513659679896, ...
    ];

for jj=1:1:length(Battery)
    % Test construction from the function handle:
    g = chebfun3(Battery{jj}, dom, 'chebfun3f');
    pass(jj) = abs(sum3(g) - exact(jj)) < tol;
end
end